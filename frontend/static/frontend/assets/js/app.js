const { createApp } = Vue;createApp({  delimiters: ['${', '}$'],  mixins: [window.mix ? window.mix : {}],  methods: {    postData(url, payload, config) {      return axios.post(url, payload, config ? config : {})        .then(response => {          return response.data ? response.data : (response.json ? response.json() : null);        })        .catch(() => {          console.warn('Метод ' + url + ' не реализован');          throw new Error('no "post" method');        });    },    getData(url, payload) {      return axios.get(url, { params: payload })        .then(response => {          return response.data ? response.data : (response.json ? response.json() : null);        })        .catch(error => {          console.warn('Метод ' + url + ' не реализован');          throw new Error('no "get" method');        });    },    search() {         location.assign(`/catalog?filterSearch=${this.searchText}`)//         this.getData('/api/search/', {filterSearch : this.searchText})//        .then(data => {//          this.bookCards = data.items;//          this.currentPage = data.currentPage;//          this.lastPage = data.lastPage;//          const queryParams = `filterSearch=${this.searchText}`;//           setTimeout(() => {//               location.assign(`/catalog?${queryParams}`);//            }, 500);////        })//        .catch(() => {//          console.warn('Ошибка получения');////          this.genres = [];//        });     },    getGenres() {      this.getData('/api/genre/')        .then(data => {          this.genres = data;        })        .catch(() => {          console.warn('Ошибка получения жанров');          this.genres = [];        });    },    getCookie(name) {      let cookieValue = null;      if (document.cookie && document.cookie !== '') {        const cookies = document.cookie.split(';');        for (let i = 0; i < cookies.length; i++) {          const cookie = cookies[i].trim();          if (cookie.substring(0, name.length + 1) === name + '=') {            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));            break;          }        }      }      return cookieValue;    },  },   mounted() {    this.getGenres();   },  data() {    return {      searchText: '',      bookCards: [],      currentPage: null,      lastPage: 1,      sortRules: [        { id: 'rating', title: 'Популярности' },        { id: 'title', title: 'По названию книги' },        { id: 'reviews', title: 'Отзывам' },        { id: 'date', title: 'Новизне' }      ],    };  },}).mount('#site');